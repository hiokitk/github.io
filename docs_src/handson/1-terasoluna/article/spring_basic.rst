SpringFrameWorkにおける主要機能
=====================================================
本章ではTERASOLUNA Server FrameworkのベースとなるSpringFrameWorkの主な機能について簡単にまとめる


DI
^^^
* DIとは、依存性(Dependency)を注入(Injection)する機能のこと。
* Javaでオブジェクトを生成する場合、new演算子でbean化(インスタンス化)することになるが、
  オブジェクトにアノテーションを付与することで、ApplicationContextによって、beanの自動生成と依存クラスへの設定が可能となっている。
* また、beanへのプロパティも設定ファイル上に定義することになるため、プロパティの変更時もソースコードの修正が発生しなくて済む。


アノテーション
^^^^^^^^^^^^^^^
* アノテーションとは、@で始まる文でビルド時に必要な処理を行ことができるというもので、以下のようなものがある。

  .. csv-table::

   "@Component", "付与することで、クラスがBeanとして登録される"
   "@Transactional", "付与することで、トランザクション制御が行われる（開始・終了やコミット、ロールバック等の管理）"
   "@Controller", "付与することで、Controllerクラスとして認識され、コンポーネントスキャンの対象となる"
   "@RequestMapping", "付与することでURLのルートになり、各メソッドはルートからの相対パスのURLにマッピングされる"
   "@ModelAttribute", "使うことで、FormオブジェクトとHTML formを結びつけることができる"



AOP
^^^
* Aspect Oriented Programming（アスペクト指向プログラミング）という技法。
* プログラムの特定の振る舞いをそのプログラム本体から分離し、いつでも組み込んだり取り除いたりできるようにする仕組み。
* 例えば、ログ出力処理など、複数のクラスをまたがって実行したい処理について、アスペクトとして、別クラスに切り出してアノテーション化することで、
  呼び出し元クラスからは、ロガーのアノテーションを付与するだけでログ出力処理が実行可能となる。



